name: Beta Environment Deployment

on:
  push:
    branches: [ beta ]
  workflow_dispatch:
    inputs:
      deploy_type:
        description: 'Type of deployment'
        required: true
        default: 'regular'
        type: choice
        options:
          - regular
          - hotfix
          - rollback

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  KUBE_NAMESPACE: beta

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Run Beta Validation Tests
        run: |
          pip install -r requirements.txt
          python -m pytest tests/beta/ -v
          
      - name: Security Scan
        uses: snyk/actions/python@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
          
  build:
    needs: validate
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        
      - name: Login to Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:beta
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: beta
    steps:
      - uses: actions/checkout@v3
      
      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        
      - name: Configure kubectl
        uses: azure/k8s-set-context@v3
        with:
          kubeconfig: ${{ secrets.KUBE_CONFIG_BETA }}
          
      - name: Update Beta Secrets
        run: |
          echo "${{ secrets.BETA_SECRETS }}" | base64 -d > beta-secrets.yaml
          kubectl apply -f beta-secrets.yaml
          rm beta-secrets.yaml
          
      - name: Deploy to Beta
        run: |
          kubectl apply -f kubernetes/beta/ -n ${{ env.KUBE_NAMESPACE }}
          kubectl rollout status deployment/medication-tracker-beta -n ${{ env.KUBE_NAMESPACE }}
          
      - name: Run Database Migrations
        run: |
          kubectl apply -f kubernetes/beta/init-beta-db.yaml
          kubectl wait --for=condition=complete job/init-beta-db -n ${{ env.KUBE_NAMESPACE }} --timeout=300s
          
  notify:
    needs: deploy
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify Beta Testers
        if: ${{ needs.deploy.result == 'success' }}
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: beta-deployment-complete
          client-payload: '{"status": "success", "version": "${{ github.sha }}"}'
          
      - name: Notify Team of Failure
        if: ${{ needs.deploy.result != 'success' }}
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: beta-deployment-failed
          client-payload: '{"status": "failed", "version": "${{ github.sha }}"}'
